//VARS
$tinyWidth: 376px;
$mobileWidth: 426px;
$tabletWidth: 769px;
$desktopWidth: 1025px;
$browserContext: 16; //pixel density of fonts.

// MIXINS
@mixin alignTextVertical ($height) {
  line-height: $height;
  vertical-align: middle;
}

@mixin containImg ($maxHeight, $maxWidth: 100%) {
  display: block;
  height: $maxHeight;
  max-width: $maxWidth;
  width: auto;
  margin: auto;
}



@mixin centerDivHorizontal ($divWidth) {
  $margin: (100% - $divWidth) / 2;
  margin-left: $margin;
  margin-right: $margin;
}

@function em($pixels, $context: $browserContext) {
  @return #{$pixels/$context}em;
}

@mixin responsiveImg ($mobile, $desktop, $tablet: $mobile, $context: $browserContext) {
  @media only screen and (max-width: $mobileWidth) { // mobile
    @include containImg($mobile);
  }
  @media only screen and (min-width: $mobileWidth) and (max-width: $tabletWidth) { // tablet
    @include containImg($tablet);
  }
  @media only screen and (min-width: $tabletWidth) { // desktop
    @include containImg($desktop);
  }
}

@mixin responsiveText ($fontSize, $context: $browserContext) {
  @media only screen and (max-width: $mobileWidth) { // mobile
    font-size: em($fontSize * 1.25, $context);
  }
  @media only screen and (min-width: $mobileWidth) and (max-width: $tabletWidth) { // tablet
    font-size: em($fontSize * 1.25, $context);
  }
  @media only screen and (min-width: $tabletWidth) and (max-width: $desktopWidth) { // desktop
    font-size: em($fontSize, $context);
  }
  @media only screen and (min-width: $desktopWidth) { // ultra-wide
    font-size: em($fontSize * 1.25, $context);
  }
}

@mixin responsiveWidth ($mobile, $desktop, $tablet: $mobile, $centered: false, $padding: 0) {
  @media only screen and (max-width: $mobileWidth) { // mobile
    $width: $mobile;
    $totalWidth: $width + $padding;
    width: $width;
    @if ($centered == true) {
      @include centerDivHorizontal($totalWidth);
    }
  }
  @media only screen and (min-width: $mobileWidth) and (max-width: $tabletWidth) { // tablet
    $width: $tablet;
    $totalWidth: $width + $padding;
    width: $width;
    @if ($centered == true) {
      @include centerDivHorizontal($totalWidth);
    }
  }
  @media only screen and (min-width: $tabletWidth) { // desktop
    $width: $desktop;
    $totalWidth: $width + $padding;
    width: $width;
    @if ($centered == true) {
      @include centerDivHorizontal($totalWidth);
    }
  }
}

@mixin mobileWidth ($mobile, $tablet: $mobile, $padding: 0) {
  @media only screen and(max-width: $mobileWidth) { // mobile
    width: $mobile + $padding;
  }
  @media only screen and(min-width: $mobileWidth) and (max-width: $tabletWidth) { // tablet
    width: $tablet + $padding;
  }
}

@mixin responsiveHeight ($mobile, $desktop, $tablet: $mobile, $padding: 0) {
  @media only screen and (max-width: $mobileWidth) { // mobile
    $height: $mobile;
    height: $height;
  }
  @media only screen and (min-width: $mobileWidth) and (max-width: $tabletWidth) { // tablet
    $height: $tablet;
    height: $height;
  }
  @media only screen and (min-width: $tabletWidth) { // desktop
    $height: $desktop;
    height: $height;
  }
}

@mixin desktopOnly () {
  @media only screen and(min-width: $tabletWidth) { // mobile
      @content;
  }
}

@mixin mobileOnly () {
  @media only screen and(max-width: $mobileWidth) { // mobile
      @content;
  }
}

@mixin tinyScreenOnly () {
  @media only screen and(max-width: $tinyWidth) { // mobile
      @content;
  }
}
